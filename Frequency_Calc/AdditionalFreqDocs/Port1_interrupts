//This code takes an external interrrupt from Port 1 pin 1 and toggles an LED on Port 1 pin 0.

#include <msp430x26x.h>

volatile int flag = 0;

void main()
{
    WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
    DCOCTL = CALDCO_8MHZ;
    BCSCTL2 = 0;

    P1SEL &= (~BIT1); // Set P1.1 SEL as GPIO (Setting to a 1 disables P1 interrupts, setting to 0 enables interrupts, currently set to 0)
    P1DIR |= (BIT0);   // Set P1.0 as Output (pin 12 on the board)
    P1DIR &= (~BIT1); // Set P1.1 SEL as Input (pin 13 on the board)
    P1IES |= (BIT0); // Rising Edge Interrupt
    P1IFG &= (~BIT1); // Clear interrupt flag
    P1IE |= (BIT1); // Enable interrupt for Port 1
    __enable_interrupt(); // Enable Global Interrupts


    while(1)
    {
        if(flag == 1)
        {
            P1OUT ^= BIT0;
            flag = 0;
        }
    }

}

// Port 1 interrupt service routine
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    flag = 1;
 // P1OUT ^= BIT0;
    P1IFG &= (~BIT1); // P1.1 IFG clear

    
    __enable_interrupt();
}
